name: Build Release

on:
  push:
    branches: ["main"]
  pull_request: 
    branches: ["main"]
    
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOTNET_INSTALL_DIR: ~/.dotnet
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0
          
      - name: Set up variables
        id: vars
        run: |
          # Extract package version from project
          version=$(grep -oP '<Version>\K[^<]+' RepoXR.csproj)
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Setup Dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0"

      - name: Restore NuGet packages
        run: dotnet restore
        
      - name: Build NuGet package
        run: dotnet pack -p:Version='${{ steps.vars.outputs.version }}' -c Release
        
      - name: Upload NuGet package
        if: github.event_name == 'push'
        run: |
          dotnet nuget push bin/Release/*.nupkg --api-key "$NUGET_TOKEN" --source https://nuget.daxcess.io/v3/index.json
        env:
          NUGET_TOKEN: ${{ secrets.NUGET_TOKEN }}
          
      - name: Build app
        run: dotnet build -c Release
        
      - name: Configure GPG Key
        run: |
          echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --import
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
          
      - name: Prepare and bundle package
        run: |
          # Set up template
          mkdir package
          git --work-tree=./package checkout origin/thunderstore ./
          
          # Copy and sign release binaries
          cp bin/Release/netstandard2.1/RepoXR.dll ./package/BepInEx/plugins/RepoXR/
          cp bin/Release/netstandard2.1/RepoXR.Preload.dll ./package/BepInEx/patchers/RepoXR/
          gpg --output ./package/BepInEx/plugins/RepoXR/RepoXR.dll.sig --detach-sig ./package/BepInEx/plugins/RepoXR/RepoXR.dll
          gpg --output ./package/BepInEx/patchers/RepoXR/RepoXR.Preload.dll.sig --detach-sig ./package/BepInEx/patchers/RepoXR/RepoXR.Preload.dll
          
          # Move assets
          mv ./package/repoxrassets ./package/BepInEx/plugins/RepoXR/repoxrassets
          
          # Copy docs and license
          cp CHANGELOG.md ./package/CHANGELOG.md
          cp LICENSE ./package/LICENSE
          
          # Update Thunderstore manifest
          jq '.version_number = "${{ steps.vars.outputs.version }}"' ./package/manifest.json > ./package/manifest_new.json
          mv ./package/manifest_new.json ./package/manifest.json
          
      - name: Upload build artifacts
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: RepoXR-${{ steps.vars.outputs.version }}
          path: ./package